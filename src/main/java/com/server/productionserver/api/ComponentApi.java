/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.server.productionserver.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;

import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-11-06T17:21:33.341303800+08:00[Asia/Shanghai]")

@Validated
@Api(value = "component", description = "the component API")
public interface ComponentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /component/deleteById: 根据id删除零件信息
     *
     * @param comId  (required)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "根据id删除零件信息", nickname = "componentComIdDelete", notes = "", response = Object.class, tags={ "零件表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class),
            @ApiResponse(code = 404, message = "找不到记录", response = Object.class)})
    @RequestMapping(value = "/component/deleteById",
            produces = { "application/json" },
            consumes = { "multipart/form-data" },
            method = RequestMethod.DELETE)
    default ResponseEntity<Object> componentComIdDelete(@ApiParam(value = "", required=true) @RequestParam(value="com_id") String comId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /component/getById : 根据id获取零件信息
     *
     * @param comId  (required)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "根据id获取零件信息", nickname = "componentComIdGet", notes = "", response = Object.class, tags={ "零件表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/component/getById",
            produces = { "application/json" },
            consumes = { "multipart/form-data" },
            method = RequestMethod.GET)
    default ResponseEntity<Object> componentComIdGet(@ApiParam(value = "",required=true) @RequestParam("com_id") String comId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

    /**
     * GET /component : 查询全部零件信息
     *
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "查询全部零件信息", nickname = "componentGet", notes = "", response = Object.class, tags={ "零件表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/component",
            produces = { "application/json" },
            method = RequestMethod.GET)
    default ResponseEntity<Object> componentGet() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /component : 修改零件信息
     *
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "根据id修改零件信息", nickname = "componentComIdPut", notes = "", response = Object.class, tags={ "零件表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/component",
            produces = { "application/json" },
            consumes = { "multipart/form-data" },
            method = RequestMethod.PUT)
    default ResponseEntity<Object> componentComIdPut(@ApiParam(value = "", required=true) @RequestParam(value="com_id", required=true)  String comId,@ApiParam(value = "") @RequestParam(value="com_num", required=false)  Integer comNum,@ApiParam(value = "") @RequestParam(value="com_count", required=false)  Integer comCount,@ApiParam(value = "") @RequestParam(value="com_order", required=false)  Integer comOrder,@ApiParam(value = "") @RequestParam(value="com_length", required=false)  Integer comLength,@ApiParam(value = "") @RequestParam(value="com_width", required=false)  Integer comWidth,@ApiParam(value = "") @RequestParam(value="com_type", required=false)  String comType,@ApiParam(value = "") @RequestParam(value="com_size", required=false)  Integer comSize,@ApiParam(value = "") @RequestParam(value="welding_area", required=false)  Integer weldingArea,@ApiParam(value = "") @RequestParam(value="producing_area", required=false)  Integer producingArea,@ApiParam(value = "") @RequestParam(value="producing_num", required=false)  Integer producingNum,@ApiParam(value = "") @RequestParam(value="com_kind", required=false)  Integer comKind, @ApiParam(value = "", required=true) @RequestParam(value="box_id", required=false)  String boxId, @ApiParam(value = "", required=true) @RequestParam(value="work_id", required=false)  String workId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /component : 插入零件信息
     *
     * @param comId  (required)
     * @param comNum  (optional)
     * @param comCount  (optional)
     * @param comOrder  (optional)
     * @param comLength  (optional)
     * @param comWidth  (optional)
     * @param comType  (optional)
     * @param comSize  (optional)
     * @param weldingArea  (optional)
     * @param producingArea  (optional)
     * @param producingNum  (optional)
     * @param comKind  (optional)
     * @param boxId  (optional)
     *
     * @return 成功 (status code 201)
     *         or 禁止访问 (status code 403)
     */
    @ApiOperation(value = "插入零件信息", nickname = "componentPost", notes = "", response = Object.class, tags={ "零件表", })
    @ApiResponses(value = {
            @ApiResponse(code = 201, message = "成功", response = Object.class),
            @ApiResponse(code = 403, message = "禁止访问", response = Object.class)})
    @RequestMapping(value = "/component",
            produces = { "application/json" },
            consumes = { "multipart/form-data" },
            method = RequestMethod.POST)
    default ResponseEntity<Object> componentPost(@ApiParam(value = "", required=true) @RequestParam(value="com_id", required=true)  String comId,@ApiParam(value = "") @RequestParam(value="com_num", required=false)  Integer comNum,@ApiParam(value = "") @RequestParam(value="com_count", required=false)  Integer comCount,@ApiParam(value = "") @RequestParam(value="com_order", required=false)  Integer comOrder,@ApiParam(value = "") @RequestParam(value="com_length", required=false)  Integer comLength,@ApiParam(value = "") @RequestParam(value="com_width", required=false)  Integer comWidth,@ApiParam(value = "") @RequestParam(value="com_type", required=false)  String comType,@ApiParam(value = "") @RequestParam(value="com_size", required=false)  Integer comSize,@ApiParam(value = "") @RequestParam(value="welding_area", required=false)  Integer weldingArea,@ApiParam(value = "") @RequestParam(value="producing_area", required=false)  Integer producingArea,@ApiParam(value = "") @RequestParam(value="producing_num", required=false)  Integer producingNum,@ApiParam(value = "") @RequestParam(value="com_kind", required=false)  Integer comKind, @ApiParam(value = "") @RequestParam(value="box_id", required=false)  String boxId, @ApiParam(value = "", required=true) @RequestParam(value="work_id", required=false)  String workId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
