/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.server.productionserver.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-11-06T17:21:33.341303800+08:00[Asia/Shanghai]")

@Validated
@Api(value = "express_company", description = "the express_company API")
public interface ExpressCompanyApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /express_company : 查询所有快递公司信息
     *
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "查询所有快递公司信息", nickname = "expressCompanyGet", notes = "", response = Object.class, tags={ "快递公司表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/express_company",
            produces = { "application/json" },
            method = RequestMethod.GET)
    default ResponseEntity<Object> expressCompanyGet() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /express_company : 插入快递公司信息
     *
     * @param expressName  (optional)
     * @param workId  (optional)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "插入快递公司信息", nickname = "expressCompanyPost", notes = "", response = Object.class, tags={ "快递公司表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/express_company",
            produces = { "application/json" },
            method = RequestMethod.POST)
    default ResponseEntity<Object> expressCompanyPost(@ApiParam(value = "") @Valid @RequestParam(value = "express_name", required = false) String expressName,@ApiParam(value = "") @Valid @RequestParam(value = "work_id", required = false) String workId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /express_company/deleteById : 根据id删除快递公司信息
     *
     * @param workId  (required)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "根据项目id删除快递公司信息", nickname = "expressCompanyworkIdDelete", notes = "", response = Object.class, tags={ "快递公司表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/express_company/deleteById",
            produces = { "application/json" },
            method = RequestMethod.DELETE)
    default ResponseEntity<Object> expressCompanyworkIdDelete(@ApiParam(value = "",required=true) @RequestParam("work_id") String workId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /express_company/getById : 根据id查询快递公司信息
     *
     * @param workId  (required)
     * @return 成功 (status code 200)
     */
    @ApiOperation(value = "根据项目id查询快递公司信息", nickname = "expressCompanyworkIdGet", notes = "", response = Object.class, tags={ "快递公司表", })
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "成功", response = Object.class) })
    @RequestMapping(value = "/express_company/getById",
            produces = { "application/json" },
            method = RequestMethod.GET)
    default ResponseEntity<Object> expressCompanyworkIdGet(@ApiParam(value = "",required=true) @RequestParam("work_id") String workId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
